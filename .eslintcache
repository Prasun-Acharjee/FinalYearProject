[{"/home/prasun/dev/graph-visulization/src/App.js":"1","/home/prasun/dev/graph-visulization/src/reportWebVitals.js":"2","/home/prasun/dev/graph-visulization/src/index.js":"3"},{"size":1755,"mtime":1609230639763,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1608013068527,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1608013068527,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1lezid2",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/prasun/dev/graph-visulization/src/App.js",["15"],"import React, { Component } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport CSVReader from 'react-csv-reader'\nconst papaparseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n  transformHeader: header =>\n    header\n      .toLowerCase()\n      .replace(/\\W/g, '')\n}\nconst data = [\n  {\n    name: 'Post A', Likes: 4000, Dislikes: 2400, amt: 2400,\n  },\n  {\n    name: 'Post B', Likes: 3000, Dislikes: 1398, amt: 2210,\n  },\n  {\n    name: 'Post C', Likes: 2000, Dislikes: 9800, amt: 2290,\n  },\n  {\n    name: 'Post D', Likes: 2780, Dislikes: 3908, amt: 2000,\n  },\n  {\n    name: 'Post E', Likes: 1890, Dislikes: 4800, amt: 2181,\n  },\n  {\n    name: 'Post F', Likes: 2390, Dislikes: 3800, amt: 2500,\n  },\n  {\n    name: 'Post G', Likes: 3490, Dislikes: 4300, amt: 2100,\n  },\n];\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {data : []};\n  }\n  render() {\n    return (\n      <div>\n      <LineChart\n        width={1000}\n        height={500}\n        data={this.state.data}\n        margin={{\n          top: 30, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid />\n        <XAxis dataKey=\"mileagethousands\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n        <Line type=\"monotone\" dataKey=\"mileagethousands\" stroke=\"#82ca9d\" />\n      </LineChart>\n      <CSVReader onFileLoaded={(data, fileInfo) => this.setState({data:data.sort(function(a, b) {\n  return a.mileagethousands - b.mileagethousands;\n})},()=>console.log(data,fileInfo))} parserOptions={papaparseOptions} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/prasun/dev/graph-visulization/src/reportWebVitals.js",[],"/home/prasun/dev/graph-visulization/src/index.js",[],{"ruleId":"16","severity":1,"message":"17","line":15,"column":7,"nodeType":"18","messageId":"19","endLine":15,"endColumn":11},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]